#! /user/bin/python
# -*- coding:UTF-8 -*-
"""
@product:PyCharm
@project:PythonCode_Study
@file:Class_List.py
@AUTHOR:DELL - 李彦文
@time:2020/12/28
"""

# 列表 list   符号 []   list 是关键字，命名时不能用这个字符
a = []
b = [1, 0.02, 'hello', [1, 2, 3], True]
c = [2, 4, True, [2, 5, 8], '小李', 99.85]
d = [4, True, '小李', [2, 5, 8]]

'''
1、可以存在空列表
2、列表里面可以存在任何数据类型的数据
3、列表里面的元素，根据逗号来进行分割
4、列表里面的元素，也是有索引的，索引值从0开始
5、获取列表里面的单个值：列表[索引值]
6、列表的切片，同字符串的操作   列表名[索引头:索引尾:步长]
'''
print(len(b))  # 打印出列表的长度，长度为5

print(b[2])     # 打印结果为 hello

print(b[::2])     # 打印索引为偶数的值：结果为 [1, 'hello', True]
print(b[0:5:2])     # 打印索引为偶数的值，索引值为0,2,4：结果为 [1, 'hello', True]

'''
列表的作用：存储数据
如果存储的数据，是同一种数据类型，建议用列表
'''

# 如何往列表里面插入输入
# append   追加，追加在末尾，每次只能追加一个元素
b.append("秦天")      # 将元素直接加到列表的最后面
print("b列表的值{0}".format(b))     # 格式化输出，结果为[1, 0.02, 'hello', [1, 2, 3], True, '秦天']

# insert 插入数据，想插入在哪个位置就插入哪个位置，只需要事先指定插入的位置的索引值
b.insert(2, "monica")   # 2是索引值
print("b列表的值{0}".format(b))     # 格式化输出，结果为[1, 0.02, 'monica', 'hello', [1, 2, 3], True, '秦天']

# 删除列表里面的元素，pop() 默认删除最后一个元素
b.pop()
print("b列表的值{0}".format(b))     # 格式化输出，结果为[1, 0.02, 'monica', 'hello', [1, 2, 3], True]

# b.pop(2) ,括号中传入索引值，就会删除指定索引位置的元素
c.pop(2)
print("c列表的值{0}".format(c))     # 格式化输出，结果为[2, 4, [2, 5, 8], '小李', 99.85]

# b.remove(需要删除的值),需要指定删除某个值
d.remove(1)
print("d列表的值{0}".format(d))     # 格式化输出，结果为[4, '小李', [2, 5, 8]]

res = b.pop()   # pop函数 会返回被删除的那个元素，函数return关键字
print("d列表的值{0}".format(res))   # 格式化输出，结果为:True


# 修改列表内元素的值  a[索引值] = 新值
d[2] = [1, 2, 3, 4, 5]  # 赋值运算
print("d列表的值{0}".format(d))     # 格式化输出,结果为[4, '小李', [1, 2, 3, 4, 5]]